<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" 
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="hr"/>
		<property name="password" value="hr"/>
	</bean>

	<!-- mybatis-spring 라이브러리 필요 -->
	<!-- 매개변수(property) -->
	<bean id="sqlSessionFactory"
			class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:/mybatisConfig.xml"/>
		<property name="mapperLocations" value="classpath:/mappers/**/*Mapper.xml"/>
	</bean>
	
 	<!-- template를 이용하면 객체관리 해준다 
	생성자를 이용해서 초기화(constructor-arg) -->
	<bean id ="sqlSession"
			class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- 트랜잭션 어노테이션 -->	
	<tx:annotation-driven/>
	<!-- 트랜잭션 매니저 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="fileUploadPath" class="java.lang.String">
		<constructor-arg value="D:/student/byh/spring/upload" />
	</bean>
	<!-- 암호화 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"> 
	</bean>
	<!-- aop설정을 통해서 자동으로 proxy객체 생성 -->
	<aop:aspectj-autoproxy/>
	 
	<!-- 스프링이 자동 스캔하는 패키지 -->
	<context:component-scan base-package="org.spring.dao" />
	<context:component-scan base-package="org.spring.service" />	
	<context:component-scan base-package="org.spring.aop" />	
</beans>
